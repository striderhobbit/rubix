$cubeSize: 210px;
$cubieSize: calc($cubeSize / 3);

@each $axis in x, y, z {
    @each $direction in -1, 1 {
        @keyframes rotate-#{$axis}#{if($direction==1, "", "-reverse")} {
            0% {
                transform: rotate(0);
            }
            100% {
                transform: rotate#{to-upper-case($axis) }(calc($direction * 90deg));
            }
        }
    }
}

:host {
    align-items: center;
    display: flex;
    height: 100%;
    justify-content: center;
}

.cube {
    height: $cubeSize;
    margin: calc($cubeSize * (sqrt(3) - 1) / 2);
    transform-style: preserve-3d;
    transform: rotate3d(var(--rotate-x), var(--rotate-y), var(--rotate-z), calc(var(--rotate-a) * 1rad));
    width: $cubeSize;

    --color-back: #0246ad;
    --color-down: #ffd500;
    --color-front: #009b48;
    --color-left: #ff5800;
    --color-right: #b71234;
    --color-up: white;
}

.cubicle {
    height: 100%;
    pointer-events: none;
    position: absolute;
    transform-style: preserve-3d;
    width: 100%;

    :host([data-move]) & {
        animation-duration: 1s;
        animation-timing-function: ease-in-out;
    }

    :host([data-move="B"]) &__layer--B {
        animation-name: rotate-z-reverse;
    }

    :host([data-move="D"]) &__layer--D,
    :host([data-move="E"]) &__layer--E {
        animation-name: rotate-y;
    }

    :host([data-move="F"]) &__layer--F,
    :host([data-move="S"]) &__layer--S {
        animation-name: rotate-z;
    }

    :host([data-move="L"]) &__layer--L,
    :host([data-move="M"]) &__layer--M {
        animation-name: rotate-x-reverse;
    }

    :host([data-move="R"]) &__layer--R {
        animation-name: rotate-x;
    }

    :host([data-move="U"]) &__layer--U {
        animation-name: rotate-y-reverse;
    }
}

.cubie {
    height: $cubieSize;
    transform-style: preserve-3d;
    transform: translate3d(calc(var(--x) * $cubieSize), calc(var(--y) * $cubieSize), calc((var(--z) - 1) * $cubieSize));
    width: $cubieSize;
}

.cubie__face {
    align-items: center;
    background-color: var(--color);
    border-radius: 10px;
    display: flex;
    font-size: calc($cubieSize / 2);
    height: 100%;
    justify-content: center;
    position: absolute;
    width: 100%;

    &--back {
        transform: rotateY(180deg) translateZ(calc($cubieSize / 2));
    }

    &--down {
        transform: rotateX(-90deg) translateZ(calc($cubieSize / 2));
    }

    &--front {
        transform: translateZ(calc($cubieSize / 2));
    }

    &--left {
        transform: rotateY(-90deg) translateZ(calc($cubieSize / 2));
    }

    &--right {
        transform: rotateY(90deg) translateZ(calc($cubieSize / 2));
    }

    &--up {
        transform: rotateX(90deg) translateZ(calc($cubieSize / 2));
    }
}
